// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VyShare;

namespace VyShare.Migrations
{
    [DbContext(typeof(VyShareContext))]
    [Migration("20200604101628_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EndPoint")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seat")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartPoint")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TicketHolderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TicketHolderId");

                    b.ToTable("BasicTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b745548-a080-4cbe-8ae0-b259fb33821e"),
                            EndPoint = "Grønnåsen Skole",
                            OrderId = new Guid("8e2572c2-13d9-4023-b8af-6385285f3d7d"),
                            Price = 412m,
                            ReferenceCode = "YXHA5",
                            Seat = "13A",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("69808911-4dfa-4ff2-811f-17c1436c557a"),
                            Type = "Honnør"
                        },
                        new
                        {
                            Id = new Guid("ae7e5857-8c38-4a94-b51e-9bb4a769067d"),
                            EndPoint = "Grønnåsen Skole",
                            OrderId = new Guid("8e2572c2-13d9-4023-b8af-6385285f3d7d"),
                            Price = 375m,
                            ReferenceCode = "YXHBA6",
                            Seat = "13B",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("33b72a84-1f0e-49a5-959a-a1224ba88cad"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("9a0bcee7-182c-4829-86e3-1ad6edbd56c5"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("8426b257-a5ca-48d6-8f6a-52ec47785a58"),
                            Price = 199m,
                            ReferenceCode = "OPS34",
                            Seat = "03A",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("ee2852ac-0367-4a59-97a8-804156f19b44"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("01a204c1-ae0f-4224-8a12-9df247774720"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("8426b257-a5ca-48d6-8f6a-52ec47785a58"),
                            Price = 199m,
                            ReferenceCode = "PSD33",
                            Seat = "03B",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("2de01bd3-d536-4560-91d8-9555f7344faa"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("dbdbdd37-b766-4b3a-b030-d0bdbb66c04d"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("8426b257-a5ca-48d6-8f6a-52ec47785a58"),
                            Price = 219m,
                            ReferenceCode = "QSO20",
                            Seat = "03C",
                            StartPoint = "Larvik",
                            TicketHolderId = new Guid("4ad9ff01-69cf-41d1-bf98-d2a952ebdc21"),
                            Type = "Student"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e2572c2-13d9-4023-b8af-6385285f3d7d"),
                            IsActive = true,
                            Name = "Familietur til Grønnåsen 15.06.20"
                        },
                        new
                        {
                            Id = new Guid("8426b257-a5ca-48d6-8f6a-52ec47785a58"),
                            IsActive = true,
                            Name = "Fotballkamp"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("VyShare.Models.Contact", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.HasDiscriminator().HasValue("Contact");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69808911-4dfa-4ff2-811f-17c1436c557a"),
                            Email = "katofje@online.no",
                            FirstName = "Kato",
                            LastName = "Fjellberg",
                            PhoneNumber = "90125872"
                        },
                        new
                        {
                            Id = new Guid("33b72a84-1f0e-49a5-959a-a1224ba88cad"),
                            Email = "kathi95@gmail.com",
                            FirstName = "Kathrine",
                            LastName = "Wesenlund",
                            PhoneNumber = "40912854"
                        },
                        new
                        {
                            Id = new Guid("ee2852ac-0367-4a59-97a8-804156f19b44"),
                            Email = "kk@realitytv.com",
                            FirstName = "Kim",
                            LastName = "Kardashian",
                            PhoneNumber = "92304215"
                        },
                        new
                        {
                            Id = new Guid("2de01bd3-d536-4560-91d8-9555f7344faa"),
                            Email = "karefje@online.no",
                            FirstName = "Kåre",
                            LastName = "Fjellberg",
                            PhoneNumber = "90002390"
                        },
                        new
                        {
                            Id = new Guid("4ad9ff01-69cf-41d1-bf98-d2a952ebdc21"),
                            Email = "kennekennern51@outlook.com",
                            FirstName = "Kenneth",
                            LastName = "Kennesen",
                            PhoneNumber = "40534009"
                        });
                });

            modelBuilder.Entity("VyShare.Models.User", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13fa2a73-773c-4ce8-b9fb-2975ecd272ef"),
                            Email = "popokatepetl@online.no",
                            FirstName = "Pål",
                            LastName = "Fjellberg",
                            PhoneNumber = "90035412",
                            Username = "popokatepetl"
                        },
                        new
                        {
                            Id = new Guid("1d1f107d-4061-4393-9b7b-70e9fd1699c5"),
                            Email = "marmelade86@gmail.com",
                            FirstName = "Mia",
                            LastName = "Mikkelsen",
                            PhoneNumber = "45612039",
                            Username = "marmelade86"
                        });
                });

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.HasOne("VyShare.Models.Order", null)
                        .WithMany("BasicTickets")
                        .HasForeignKey("OrderId");

                    b.HasOne("VyShare.Models.Person", "TicketHolder")
                        .WithMany()
                        .HasForeignKey("TicketHolderId");
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.HasOne("VyShare.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
