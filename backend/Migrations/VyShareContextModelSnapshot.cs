// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VyShare;

namespace VyShare.Migrations
{
    [DbContext(typeof(VyShareContext))]
    partial class VyShareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EndPoint")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seat")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartPoint")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TicketHolderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TicketHolderId");

                    b.ToTable("BasicTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107df416-0344-403a-a765-b00cef44c919"),
                            EndPoint = "Grønnåsen Skole",
                            IsActive = true,
                            OrderId = new Guid("c259810e-6c0b-44ee-a580-f9c703eaf8dd"),
                            Price = 412m,
                            ReferenceCode = "YXHA5",
                            Seat = "13A",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("f0da2c94-0e61-40d4-8ddd-06e84bbc984b"),
                            Type = "Honnør"
                        },
                        new
                        {
                            Id = new Guid("dc619660-4158-4a94-81ae-bc956d7f65b7"),
                            EndPoint = "Grønnåsen Skole",
                            IsActive = false,
                            OrderId = new Guid("c259810e-6c0b-44ee-a580-f9c703eaf8dd"),
                            Price = 375m,
                            ReferenceCode = "YXHBA6",
                            Seat = "13B",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("20eedd7a-1cfe-4e49-9734-a99840fcd02d"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("8d984c1f-82cf-4523-9cc8-22f953cab172"),
                            EndPoint = "Ullevål stadion",
                            IsActive = true,
                            OrderId = new Guid("3d812e1e-cce7-4c18-aba4-9ed44a4602b0"),
                            Price = 199m,
                            ReferenceCode = "OPS34",
                            Seat = "03A",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("5c784931-b68f-45bb-9a64-04eaeedcf9ab"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("f6dd9907-59a4-4abc-9baf-eaad7655b823"),
                            EndPoint = "Ullevål stadion",
                            IsActive = false,
                            OrderId = new Guid("3d812e1e-cce7-4c18-aba4-9ed44a4602b0"),
                            Price = 199m,
                            ReferenceCode = "PSD33",
                            Seat = "03B",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("0923dfad-0dec-4c77-98e3-8c5fa45f3c1a"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("f8b50f5c-702d-4262-a831-ff749fde14f0"),
                            EndPoint = "Ullevål stadion",
                            IsActive = true,
                            OrderId = new Guid("3d812e1e-cce7-4c18-aba4-9ed44a4602b0"),
                            Price = 219m,
                            ReferenceCode = "QSO20",
                            Seat = "03C",
                            StartPoint = "Larvik",
                            TicketHolderId = new Guid("bdc35d66-4bff-486c-b704-42813e5ce705"),
                            Type = "Student"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c259810e-6c0b-44ee-a580-f9c703eaf8dd"),
                            Name = "Familietur til Grønnåsen 15.06.20"
                        },
                        new
                        {
                            Id = new Guid("3d812e1e-cce7-4c18-aba4-9ed44a4602b0"),
                            Name = "Fotballkamp"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("VyShare.Models.Contact", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.HasDiscriminator().HasValue("Contact");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0da2c94-0e61-40d4-8ddd-06e84bbc984b"),
                            Email = "katofje@online.no",
                            FirstName = "Kato",
                            LastName = "Fjellberg",
                            PhoneNumber = "90125872"
                        },
                        new
                        {
                            Id = new Guid("20eedd7a-1cfe-4e49-9734-a99840fcd02d"),
                            Email = "kathi95@gmail.com",
                            FirstName = "Kathrine",
                            LastName = "Wesenlund",
                            PhoneNumber = "40912854"
                        },
                        new
                        {
                            Id = new Guid("5c784931-b68f-45bb-9a64-04eaeedcf9ab"),
                            Email = "kk@realitytv.com",
                            FirstName = "Kim",
                            LastName = "Kardashian",
                            PhoneNumber = "92304215"
                        },
                        new
                        {
                            Id = new Guid("0923dfad-0dec-4c77-98e3-8c5fa45f3c1a"),
                            Email = "karefje@online.no",
                            FirstName = "Kåre",
                            LastName = "Fjellberg",
                            PhoneNumber = "90002390"
                        },
                        new
                        {
                            Id = new Guid("bdc35d66-4bff-486c-b704-42813e5ce705"),
                            Email = "kennekennern51@outlook.com",
                            FirstName = "Kenneth",
                            LastName = "Kennesen",
                            PhoneNumber = "40534009"
                        });
                });

            modelBuilder.Entity("VyShare.Models.User", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("335f3979-2207-4eff-ae99-7bc366d24665"),
                            Email = "popokatepetl@online.no",
                            FirstName = "Pål",
                            LastName = "Fjellberg",
                            PhoneNumber = "90035412",
                            Username = "popokatepetl"
                        },
                        new
                        {
                            Id = new Guid("e8e52516-0d97-4f43-ba26-c7e33b6745d3"),
                            Email = "marmelade86@gmail.com",
                            FirstName = "Mia",
                            LastName = "Mikkelsen",
                            PhoneNumber = "45612039",
                            Username = "marmelade86"
                        });
                });

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.HasOne("VyShare.Models.Order", null)
                        .WithMany("BasicTickets")
                        .HasForeignKey("OrderId");

                    b.HasOne("VyShare.Models.Person", "TicketHolder")
                        .WithMany()
                        .HasForeignKey("TicketHolderId");
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.HasOne("VyShare.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
