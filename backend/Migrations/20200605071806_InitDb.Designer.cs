// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VyShare;

namespace VyShare.Migrations
{
    [DbContext(typeof(VyShareContext))]
    [Migration("20200605071806_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EndPoint")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seat")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartPoint")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TicketHolderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TicketHolderId");

                    b.ToTable("BasicTickets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aad443a1-a807-4224-83d4-5c7aa0966418"),
                            EndPoint = "Grønnåsen Skole",
                            OrderId = new Guid("3599732a-dadd-4dcc-84ea-d11b93083f8a"),
                            Price = 412m,
                            ReferenceCode = "YXHA5",
                            Seat = "13A",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("d2e7b6b6-63bc-43f3-bf14-98f4d67cec4a"),
                            Type = "Honnør"
                        },
                        new
                        {
                            Id = new Guid("57ae7b07-192d-4cf6-b0ab-90ed48e23258"),
                            EndPoint = "Grønnåsen Skole",
                            OrderId = new Guid("3599732a-dadd-4dcc-84ea-d11b93083f8a"),
                            Price = 375m,
                            ReferenceCode = "YXHBA6",
                            Seat = "13B",
                            StartPoint = "Volda",
                            TicketHolderId = new Guid("3fc861a2-8392-4537-a78a-6cc6dc34c853"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("ed5f141b-f427-4fab-8e0b-6ecb29beede4"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("ccee8500-bace-41d7-b3ba-6b677797dd67"),
                            Price = 199m,
                            ReferenceCode = "OPS34",
                            Seat = "03A",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("80ba65f7-452b-4197-8056-660cc6dc9338"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("45cb5db7-af69-4ad4-ab35-c66fc1be192f"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("ccee8500-bace-41d7-b3ba-6b677797dd67"),
                            Price = 199m,
                            ReferenceCode = "PSD33",
                            Seat = "03B",
                            StartPoint = "Sandefjord",
                            TicketHolderId = new Guid("4200c025-8be3-4f65-8a77-938344469122"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("61bc2b42-9259-41a6-bb23-186093ef9542"),
                            EndPoint = "Ullevål stadion",
                            OrderId = new Guid("ccee8500-bace-41d7-b3ba-6b677797dd67"),
                            Price = 219m,
                            ReferenceCode = "QSO20",
                            Seat = "03C",
                            StartPoint = "Larvik",
                            TicketHolderId = new Guid("054c5c4d-0e33-4c72-8b7a-def3b080a0de"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("ace6a478-9e93-4aac-8c2c-a884cd6515fd"),
                            EndPoint = "Gol",
                            OrderId = new Guid("e1a95406-0647-49f5-b8d5-bcc2a71293e2"),
                            Price = 320m,
                            ReferenceCode = "VBW93",
                            Seat = "09D",
                            StartPoint = "Oslo S",
                            TicketHolderId = new Guid("d2e7b6b6-63bc-43f3-bf14-98f4d67cec4a"),
                            Type = "Honnør"
                        },
                        new
                        {
                            Id = new Guid("2e5ab995-cb77-4d06-bb6f-486ee1f18b37"),
                            EndPoint = "Gol",
                            OrderId = new Guid("e1a95406-0647-49f5-b8d5-bcc2a71293e2"),
                            Price = 320m,
                            ReferenceCode = "VNQ92",
                            Seat = "09E",
                            StartPoint = "Skøyen",
                            TicketHolderId = new Guid("4200c025-8be3-4f65-8a77-938344469122"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("983f9840-dd0f-4eab-90f6-94310dba114a"),
                            EndPoint = "Gol",
                            OrderId = new Guid("e1a95406-0647-49f5-b8d5-bcc2a71293e2"),
                            Price = 320m,
                            ReferenceCode = "VCS20",
                            Seat = "09C",
                            StartPoint = "Oslo S",
                            TicketHolderId = new Guid("3fc861a2-8392-4537-a78a-6cc6dc34c853"),
                            Type = "Student"
                        },
                        new
                        {
                            Id = new Guid("49d0a7df-a6f5-406f-9e6f-e7a4df6fa773"),
                            EndPoint = "Oslo S",
                            OrderId = new Guid("c1640b6f-c777-4ad9-9c54-f3df73b11e47"),
                            Price = 72m,
                            ReferenceCode = "ARQ42",
                            Seat = "13D",
                            StartPoint = "Kolbotn",
                            TicketHolderId = new Guid("80ba65f7-452b-4197-8056-660cc6dc9338"),
                            Type = "Student"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3599732a-dadd-4dcc-84ea-d11b93083f8a"),
                            IsActive = true,
                            Name = "Familietur til Grønnåsen 15.06.20"
                        },
                        new
                        {
                            Id = new Guid("ccee8500-bace-41d7-b3ba-6b677797dd67"),
                            IsActive = true,
                            Name = "Fotballkamp"
                        },
                        new
                        {
                            Id = new Guid("e1a95406-0647-49f5-b8d5-bcc2a71293e2"),
                            IsActive = false,
                            Name = "Skitur"
                        },
                        new
                        {
                            Id = new Guid("c1640b6f-c777-4ad9-9c54-f3df73b11e47"),
                            IsActive = false,
                            Name = "Oslo 11.02.20"
                        });
                });

            modelBuilder.Entity("VyShare.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("VyShare.Models.Contact", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.HasDiscriminator().HasValue("Contact");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2e7b6b6-63bc-43f3-bf14-98f4d67cec4a"),
                            Email = "katofje@online.no",
                            FirstName = "Kato",
                            LastName = "Fjellberg",
                            PhoneNumber = "90125872"
                        },
                        new
                        {
                            Id = new Guid("3fc861a2-8392-4537-a78a-6cc6dc34c853"),
                            Email = "kathi95@gmail.com",
                            FirstName = "Kathrine",
                            LastName = "Wesenlund",
                            PhoneNumber = "40912854"
                        },
                        new
                        {
                            Id = new Guid("80ba65f7-452b-4197-8056-660cc6dc9338"),
                            Email = "kk@realitytv.com",
                            FirstName = "Kim",
                            LastName = "Kardashian",
                            PhoneNumber = "92304215"
                        },
                        new
                        {
                            Id = new Guid("4200c025-8be3-4f65-8a77-938344469122"),
                            Email = "karefje@online.no",
                            FirstName = "Kåre",
                            LastName = "Fjellberg",
                            PhoneNumber = "90002390"
                        },
                        new
                        {
                            Id = new Guid("054c5c4d-0e33-4c72-8b7a-def3b080a0de"),
                            Email = "kennekennern51@outlook.com",
                            FirstName = "Kenneth",
                            LastName = "Kennesen",
                            PhoneNumber = "40534009"
                        });
                });

            modelBuilder.Entity("VyShare.Models.User", b =>
                {
                    b.HasBaseType("VyShare.Models.Person");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6af73c7-f126-406f-a1d3-78b30120e485"),
                            Email = "popokatepetl@online.no",
                            FirstName = "Erlend",
                            LastName = "Fjellberg",
                            PhoneNumber = "90035412",
                            Username = "popokatepetl"
                        },
                        new
                        {
                            Id = new Guid("f8da3626-b3f7-4fd9-8269-cff4c8820628"),
                            Email = "marmelade86@gmail.com",
                            FirstName = "Mia",
                            LastName = "Mikkelsen",
                            PhoneNumber = "45612039",
                            Username = "marmelade86"
                        });
                });

            modelBuilder.Entity("VyShare.Models.BasicTicket", b =>
                {
                    b.HasOne("VyShare.Models.Order", null)
                        .WithMany("BasicTickets")
                        .HasForeignKey("OrderId");

                    b.HasOne("VyShare.Models.Person", "TicketHolder")
                        .WithMany()
                        .HasForeignKey("TicketHolderId");
                });

            modelBuilder.Entity("VyShare.Models.Order", b =>
                {
                    b.HasOne("VyShare.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
